version: '3'
services:
  db:
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: gopalreddy6197
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
  
  app:
    build: .
    restart: always
    ports:
      - '5000:5000'
    depends_on:
      - db
volumes:
  mongo-data:
# version: '3.0'

# services:
#   db:
#     image: mongo:latest
#     restart: always
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: gopalreddy6197
#       MONGO_INITDB_ROOT_PASSWORD: admin
#     ports:
#       - 27017:27017
#     volumes:
#       - mongo-data:/data/db

#   app:
#     build: .
#     restart: always
#     ports:
#       - '5000:5000'
#     depends_on:
#       - db
#     networks:
#       - es-net

#   elasticsearch:
#     container_name: es-container
#     image: docker.elastic.co/elasticsearch/elasticsearch:8.0.1
#     environment:
#       - xpack.security.enabled=false
#       - "discovery.type=single-node"
#     networks:
#       - es-net
#     ports:
#       - 9200:9200

#   kibana:
#     container_name: kb-container
#     image: docker.elastic.co/kibana/kibana:8.0.1
#     environment:
#       - ELASTICSEARCH_HOSTS=http://es-container:9200
#     networks:
#       - es-net
#     depends_on:
#       - elasticsearch
#     ports:
#       - 5601:5601

# networks:
#   es-net:
#     driver: bridge

# volumes:
#   mongo-data: # Define the mongo-data volume here



